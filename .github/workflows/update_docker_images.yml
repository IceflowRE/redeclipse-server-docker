on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 4 * * *'

name: Update Docker images
jobs:
  update:
    name: ${{ matrix.config.ref }}
    runs-on: ubuntu-latest
    env:
      RSD_REPO: iceflower/redeclipse-server
      RSD_USER: iceflower
      RSD_ARCH: amd64
      RSD_DOCKER_ACCESS_TOKEN: ${{ secrets.RSD_DOCKER_ACCESS_TOKEN }}
    strategy:
      matrix:
        config:
          - {
            ref: "refs/heads/master",
            dockerfile: "Dockerfile_master"
          }
          - {
            ref: "refs/heads/stable",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v1.5.3",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v1.5.5",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v1.5.6",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v1.5.8",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v1.6.0",
            dockerfile: "Dockerfile_stable"
          }
          - {
            ref: "refs/tags/v2.0.0",
            dockerfile: "Dockerfile_2_0_0"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache updater executable
        id: cache-updater
        uses: actions/cache@v3
        with:
          path: updater
          key: ${{ runner.os }}-${{ hashFiles('updater') }}
      - name: Install Go
        if: steps.cache-updater.outputs.cache-hit != 'true'
        uses: actions/setup-go@v2
        with:
          go-version: 1.19.x
      - name: Build
        if: steps.cache-updater.outputs.cache-hit != 'true'
        run: |
          cd go-docker-updater
          go build -x -o ../updater ./cmd/updater/
          cd ../
      - name: Update
        run: |
          ./updater --dockerfile "${{ matrix.config.dockerfile }}" --ref "${{ matrix.config.ref }}" --arch "$RSD_ARCH" --repo "$RSD_REPO" --user "$RSD_USER" --password "$RSD_DOCKER_ACCESS_TOKEN" ./
